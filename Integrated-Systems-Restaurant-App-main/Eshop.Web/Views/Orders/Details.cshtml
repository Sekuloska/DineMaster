@model Restaurant.Domain.Domain.Order

@{
    ViewData["Title"] = "Order Details";
    var deliveryStatuses = ViewData["DeliveryStatuses"] as SelectList;
    var deliveryPersons = ViewData["DeliveryPersons"] as SelectList;
}

<h2>Order Details</h2>

<div>
    <h4>Order</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">Order ID</dt>
        <dd class="col-sm-10">@Model.Id</dd>
        <dt class="col-sm-2">User</dt>
        <dd class="col-sm-10">@Model.User?.UserName</dd>
        <dt class="col-sm-2">Restaurant</dt>
        <dd class="col-sm-10">@Model.Restaurant?.Name</dd>
        <dt class="col-sm-2">Order Date</dt>
        <dd class="col-sm-10">@Model.OrderDate?.ToString("yyyy-MM-dd")</dd>
        <dt class="col-sm-2">Total Amount</dt>
        <dd class="col-sm-10">@Model.TotalAmount</dd>
        <dt class="col-sm-2">Delivery Address</dt>
        <dd class="col-sm-10">@Model.DeliveryAddress</dd>
    </dl>
</div>

<div>
    <h4>Change Delivery Status</h4>
    <form asp-action="UpdateDeliveryStatus" method="post">
        <div class="form-group">
            <label for="deliveryStatus">Delivery Status</label>
            <select id="deliveryStatus" name="deliveryStatus" class="form-control">
                @foreach (var status in deliveryStatuses)
                {
                    <option value="@status.Value">@status.Text</option>
                }
            </select>
        </div>
        <input type="hidden" name="orderId" value="@Model.Id" />
        <button type="submit" class="btn btn-primary">Update Status</button>
    </form>
</div>

<div>
    <h4>Delivery Information</h4>
    <table class="table">
        <thead>
            <tr>
                <th>Delivery ID</th>
                <th>Delivery Person</th>
                <th>Delivery Date</th>
                <th>Delivery Status</th>
                <th>Change Delivery Person</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var delivery in Model.Deliveries)
            {
                <tr>
                    <td>@delivery.Id</td>
                    <td>@delivery.DeliveryPerson?.Name</td>
                    <td>@delivery.DeliveryDate?.ToString("yyyy-MM-dd")</td>
                    <td>
                        @delivery.OrderStatus
                        Change delivery status:
                        <select id="statusDropdown" onchange="changeDeliveryStatus(orderId, this.value)">
                            <option value="">Select Status</option>
                            <option value="Processing">Processing</option>
                            <option value="Prepared">Prepared</option>
                            <option value="Shipped">Shipped</option>
                            <option value="Delivered">Delivered</option>
                        </select>

                    </td>
                    <td>
                        <select onchange="assignDeliveryPerson('@delivery.Id', this.value)">
                            <option value="">Select a delivery person</option>
                            @foreach (var person in deliveryPersons)
                            {
                                <option value="@person.Value">@person.Text</option>
                            }
                        </select>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script>
        function changeDeliveryStatus(orderId, status) {
            if (!orderId || !status) {
                console.error("Order ID or Status is missing");
                return;
            }

            fetch(`/api/changeDeliveryStatus?orderId=${orderId}&status=${status}`, {
                method: 'POST'
            })
                .then(response => response.json())
                .then(data => {
                    console.log("Success:", data);
                    if (data.success) {
                        const statusElement = document.querySelector(`#order-${orderId} .status`);
                        if (statusElement) {
                            statusElement.textContent = status;
                            statusElement.className = `status ${status.toLowerCase()}`;
                        }
                    }
                })
                .catch(error => {
                    console.error("Error:", error);
                });
        }

        function assignDeliveryPerson(deliveryId, deliveryPersonId) {
            if (!deliveryId || !deliveryPersonId) {
                console.error("Delivery ID or Delivery Person ID is missing");
                return;
            }

            fetch(`/api/assignDeliveryPerson?deliveryId=${deliveryId}&deliveryPersonId=${deliveryPersonId}`, {
                method: 'POST'
            })
                .then(response => response.json())
                .then(data => {
                    console.log("Success:", data);
                    if (data.success) {
                        // Update the UI to reflect the assigned delivery person
                        const deliveryPersonElement = document.querySelector(`#delivery-${deliveryId} .delivery-person`);
                        if (deliveryPersonElement) {
                            deliveryPersonElement.textContent = `Assigned to: ${deliveryPersonId}`;
                        }
                    }
                })
                .catch(error => {
                    console.error("Error:", error);
                });
        }
    </script>
}

